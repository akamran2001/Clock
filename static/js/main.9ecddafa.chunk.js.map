{"version":3,"sources":["app/Display.js","app/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","time","split","map","value","digit","id","style","sec","color","Clock","useState","is24","set24","getTime","date","Date","normal","getHours","getMinutes","getSeconds","military","substring","length","setTime","useEffect","interval","setInterval","clearInterval","type","onClick","toDateString","fontFamily","textDecoration","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAkDeA,MA9Cf,SAAiBC,GAqCf,OACE,qBAAKC,UAAU,2CAAf,SACGD,EAAME,KAAKC,MAAM,IAAIC,KAAI,SAACC,GACzB,MArCU,OAFEC,EAuCID,GAnChB,oBACEE,GAAG,SACHC,MAAOR,EAAMS,IAAM,IAAM,EAAI,CAAEC,MAAO,SAAY,CAAEA,MAAO,OAF7D,SAIGJ,IAGc,MAAVA,EAEP,oBACEC,GAAG,SACHC,MAAOR,EAAMS,IAAM,IAAM,EAAI,CAAEC,MAAO,OAAU,CAAEA,MAAO,SAF3D,gBAOiB,MAAVJ,EAEP,oBACEC,GAAG,SACHC,MAAOR,EAAMS,IAAM,IAAM,EAAI,CAAEC,MAAO,OAAU,CAAEA,MAAO,SAF3D,gBAOiB,MAAVJ,EACF,KAEA,oBAAIC,GAAG,SAAP,SAAiBD,IAhCX,IAACA,QCDL,SAASK,IAAQ,MAERC,oBAAS,GAFD,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAGxBC,EAAU,SAACF,GACf,IAAIG,EAAO,IAAIC,KACXC,EAAM,UACRF,EAAKG,YAAc,GAAKH,EAAKG,WAAaH,EAAKG,WAAa,GADpD,YAENH,EAAKI,aAFC,YAEeJ,EAAKK,aAFpB,YAGRL,EAAKG,WAAa,GAAK,KAAO,MAE5BG,EAAQ,UAAMN,EAAKG,WAAX,YAAyBH,EAAKI,aAA9B,YAA8CJ,EAAKK,cAI/D,MAHkB,MAAdH,EAAO,KACTA,EAAS,KAAOA,EAAOK,UAAU,EAAGL,EAAOM,SAEvC,GAAN,OAAUX,EAAOS,EAAWJ,IAdA,EAwBNN,mBAASG,EAAQF,IAxBX,mBAwBvBX,EAxBuB,KAwBjBuB,EAxBiB,KAoC9B,OAVAC,qBAAU,WACRZ,EAAMD,GACN,IAAMc,EAAWC,aAAY,WAC3BH,EAAQV,EAAQF,MACf,KACH,OAAO,WACLgB,cAAcF,MAEf,CAACd,IAGF,sBAAKZ,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,WACV8B,QAAS,WACPjB,GAAOD,IAJX,SAOGA,EAAO,iBAAmB,uBAIjC,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,CAASC,KAAMA,EAAMO,KAnCd,IAAIQ,MACHI,iBAoCV,qBAAKpB,UAAU,MAAf,SACE,qBAAKA,UAAU,oDAAf,SACE,8BAnCK,IAAIgB,MACHe,qBAqCV,qBAAK/B,UAAU,MAAf,SACE,qBACEA,UAAU,2CACVO,MAAO,CAAEyB,WAAY,aAFvB,SAIE,mBACEzB,MAAO,CAAE0B,eAAgB,QACzBC,KAAK,uCACLlC,UAAU,sBAHZ,qCC1DKmC,MARf,WACE,OACE,8BACE,cAACzB,EAAD,OCOS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9ecddafa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\n\r\nfunction Display(props) {\r\n  const getDigit = (digit) => {\r\n    //Display Clock digit or letter\r\n    if (digit === \":\") {\r\n      return (\r\n        <h1\r\n          id=\"digits\"\r\n          style={props.sec % 2 === 0 ? { color: \"white\" } : { color: \"red\" }}\r\n        >\r\n          {digit}\r\n        </h1>\r\n      );\r\n    } else if (digit === \"A\") {\r\n      return (\r\n        <h1\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          AM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"P\") {\r\n      return (\r\n        <h1\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          PM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"M\") {\r\n      return null;\r\n    } else {\r\n      return <h1 id=\"digits\">{digit}</h1>;\r\n    }\r\n  };\r\n  //Render JSX\r\n  return (\r\n    <div className=\"d-flex justify-content-center clock-text\">\r\n      {props.time.split(\"\").map((value) => {\r\n        return getDigit(value);\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport Display from \"./Display\";\r\nexport default function Clock() {\r\n  //States and Functions\r\n  const [is24, set24] = useState(false);\r\n  const getTime = (is24) => {\r\n    let date = new Date();\r\n    let normal = `${\r\n      date.getHours() <= 12 ? date.getHours() : date.getHours() - 12\r\n    }:${date.getMinutes()}:${date.getSeconds()} ${\r\n      date.getHours() < 12 ? \"AM\" : \"PM\"\r\n    }`;\r\n    let military = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    if (normal[0] === \"0\") {\r\n      normal = \"12\" + normal.substring(1, normal.length);\r\n    }\r\n    return `${is24 ? military : normal}`;\r\n  };\r\n  const getSec = () => {\r\n    let date = new Date();\r\n    return date.getSeconds();\r\n  };\r\n  const getDateString = () => {\r\n    let date = new Date();\r\n    return date.toDateString();\r\n  };\r\n  const [time, setTime] = useState(getTime(is24));\r\n  //Side Effects\r\n  useEffect(() => {\r\n    set24(is24);\r\n    const interval = setInterval(() => {\r\n      setTime(getTime(is24));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [is24]);\r\n  //Render JSX\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-grad\"\r\n            onClick={() => {\r\n              set24(!is24);\r\n            }}\r\n          >\r\n            {is24 ? \"Toggle to 12hr\" : \"Toggle to 24hr\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Display time={time} sec={getSec()} />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"d-flex justify-content-center text-info date-text\">\r\n          <h1>{getDateString()}</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div\r\n          className=\"d-flex justify-content-center text-white\"\r\n          style={{ fontFamily: \"monospace\" }}\r\n        >\r\n          <a\r\n            style={{ textDecoration: \"none\" }}\r\n            href=\"https://github.com/akamran2001/Clock\"\r\n            className=\"btn-grad btn-credit\"\r\n          >\r\n            Created by Ahmed\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Clock from \"./app/Clock\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Clock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}