{"version":3,"sources":["app/Display.js","app/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","time","split","map","value","digit","alt","src","width","height","style","sec","backgroundColor","color","Clock","useState","is24","set24","getTime","date","Date","normal","getHours","getMinutes","getSeconds","military","substring","length","setTime","useEffect","interval","setInterval","clearInterval","type","onClick","toDateString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKA0DeA,MAtDf,SAAiBC,GA6Cf,OACE,qBAAKC,UAAU,gCAAf,SACGD,EAAME,KAAKC,MAAM,IAAIC,KAAI,SAACC,GACzB,MA7CU,OAFEC,EA+CID,GA3ChB,qBACEE,IAAI,QACJC,IAAI,mBACJC,MAAM,MACNC,OAAO,MACPC,MACEX,EAAMY,IAAM,IAAM,EACd,CAAEC,gBAAiB,SACnB,CAAEA,gBAAiB,SAIV,MAAVP,EACF,mCACY,MAAVA,EAEP,oBAAIK,MAAOX,EAAMY,IAAM,IAAM,EAAI,CAAEE,MAAO,OAAU,CAAEA,MAAO,SAA7D,gBAIiB,MAAVR,EAEP,oBAAIK,MAAOX,EAAMY,IAAM,IAAM,EAAI,CAAEE,MAAO,OAAU,CAAEA,MAAO,SAA7D,gBAIiB,MAAVR,EACF,KAGL,qBACEC,IAAG,UAAKD,GACRE,IAAG,iBAAYF,EAAZ,QACHG,MAAM,MACNC,OAAO,QAtCE,IAACJ,QCDL,SAASS,IAAQ,MAERC,oBAAS,GAFD,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAGxBC,EAAU,SAACF,GACf,IAAIG,EAAO,IAAIC,KACXC,EAAM,UACRF,EAAKG,YAAc,GAAKH,EAAKG,WAAaH,EAAKG,WAAa,GADpD,YAENH,EAAKI,aAFC,YAEeJ,EAAKK,aAFpB,YAGRL,EAAKG,WAAa,GAAK,KAAO,MAE5BG,EAAQ,UAAMN,EAAKG,WAAX,YAAyBH,EAAKI,aAA9B,YAA8CJ,EAAKK,cAI/D,MAHkB,MAAdH,EAAO,KACTA,EAAS,KAAOA,EAAOK,UAAU,EAAGL,EAAOM,SAEvC,GAAN,OAAUX,EAAOS,EAAWJ,IAdA,EAwBNN,mBAASG,EAAQF,IAxBX,mBAwBvBf,EAxBuB,KAwBjB2B,EAxBiB,KAoC9B,OAVAC,qBAAU,WACRZ,EAAMD,GACN,IAAMc,EAAWC,aAAY,WAC3BH,EAAQV,EAAQF,MACf,KACH,OAAO,WACLgB,cAAcF,MAEf,CAACd,IAGF,sBAAKhB,UAAU,YAAYU,MAAO,CAAEE,gBAAiB,SAArD,UACE,uBACA,qBAAKZ,UAAU,gCAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,WACVkC,QAAS,WACPjB,GAAOD,IAJX,SAOGA,EAAO,iBAAmB,qBAG/B,uBACA,cAAC,EAAD,CAASf,KAAMA,EAAMU,KAlCZ,IAAIS,MACHI,eAkCV,uBACA,qBAAKxB,UAAU,2CAAf,SACE,8BAjCO,IAAIoB,MACHe,sBCpBDC,MAJf,WACE,OAAO,cAACtB,EAAD,KCSMuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.48e6e58b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\n\r\nfunction Display(props) {\r\n  const getDigit = (digit) => {\r\n    //Display Clock digit or letter\r\n    if (digit === \":\") {\r\n      return (\r\n        <img\r\n          alt=\"colon\"\r\n          src=\"assets/colon.png\"\r\n          width=\"10%\"\r\n          height=\"10%\"\r\n          style={\r\n            props.sec % 2 === 0\r\n              ? { backgroundColor: \"white\" }\r\n              : { backgroundColor: \"red\" }\r\n          }\r\n        />\r\n      );\r\n    } else if (digit === \" \") {\r\n      return <h1> </h1>;\r\n    } else if (digit === \"A\") {\r\n      return (\r\n        <h1 style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}>\r\n          AM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"P\") {\r\n      return (\r\n        <h1 style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}>\r\n          PM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"M\") {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <img\r\n          alt={`${digit}`}\r\n          src={`assets/${digit}.png`}\r\n          width=\"10%\"\r\n          height=\"10%\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  //Render JSX\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      {props.time.split(\"\").map((value) => {\r\n        return getDigit(value);\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport Display from \"./Display\";\r\nexport default function Clock() {\r\n  //States and Functions\r\n  const [is24, set24] = useState(false);\r\n  const getTime = (is24) => {\r\n    let date = new Date();\r\n    let normal = `${\r\n      date.getHours() <= 12 ? date.getHours() : date.getHours() - 12\r\n    }:${date.getMinutes()}:${date.getSeconds()} ${\r\n      date.getHours() < 12 ? \"AM\" : \"PM\"\r\n    }`;\r\n    let military = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    if (normal[0] === \"0\") {\r\n      normal = \"12\" + normal.substring(1, normal.length);\r\n    }\r\n    return `${is24 ? military : normal}`;\r\n  };\r\n  const getSec = () => {\r\n    let date = new Date();\r\n    return date.getSeconds();\r\n  };\r\n  const getDateString = () => {\r\n    let date = new Date();\r\n    return date.toDateString();\r\n  };\r\n  const [time, setTime] = useState(getTime(is24));\r\n  //Side Effects\r\n  useEffect(() => {\r\n    set24(is24);\r\n    const interval = setInterval(() => {\r\n      setTime(getTime(is24));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [is24]);\r\n  //Render JSX\r\n  return (\r\n    <div className=\"container\" style={{ backgroundColor: \"black\" }}>\r\n      <br />\r\n      <div className=\"d-flex justify-content-center\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn-grad\"\r\n          onClick={() => {\r\n            set24(!is24);\r\n          }}\r\n        >\r\n          {is24 ? \"Toggle to 12hr\" : \"Toggle to 24hr\"}\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <Display time={time} sec={getSec()} />\r\n      <br />\r\n      <div className=\"d-flex justify-content-center text-white\">\r\n        <h1>{getDateString()}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Clock from \"./app/Clock\";\r\nfunction App() {\r\n  return <Clock />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}