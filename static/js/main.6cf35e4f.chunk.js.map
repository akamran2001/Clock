{"version":3,"sources":["app/Display.js","app/Weather.js","app/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","id","time","split","map","value","digit","style","sec","color","Weather","state","lat","undefined","lon","errorMessage","temperatureC","temperatureF","city","country","humidity","description","icon","sunrise","sunset","moonImage","getPosition","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","a","fetch","process","api_call","json","data","setState","name","Math","round","main","temp","weather","moment","unix","sys","format","this","then","position","coords","latitude","longitude","catch","err","message","alert","timerID","setInterval","clearInterval","React","Component","Clock","useState","is24","set24","getTime","date","Date","normal","getHours","getMinutes","getSeconds","military","substring","length","setTime","useEffect","interval","type","onClick","htmlFor","fontFamily","method","ngnoform","action","autoComplete","placeholder","toDateString","textDecoration","href","App","backgroundImage","window","innerWidth","innerHeight","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cf35e4f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nfunction Display(props) {\r\n  const getDigit = (digit) => {\r\n    //Display Clock digit or letter\r\n    if (digit === \":\") {\r\n      return (\r\n        <h1\r\n          id=\"digits\"\r\n          style={props.sec % 2 === 0 ? { color: \"white\" } : { color: \"red\" }}\r\n        >\r\n          {digit}\r\n        </h1>\r\n      );\r\n    } else if (digit === \"A\") {\r\n      return (\r\n        <h1\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          AM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"P\") {\r\n      return (\r\n        <h1\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          PM\r\n        </h1>\r\n      );\r\n    } else if (digit === \" \") {\r\n      return <h1 id=\"period\"> </h1>;\r\n    } else if (digit === \"M\") {\r\n      return null;\r\n    } else {\r\n      return <h1 id=\"digits\">{digit}</h1>;\r\n    }\r\n  };\r\n  //Render JSX\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"d-flex justify-content-center clock-text col\" id=\"time\">\r\n        {props.time.split(\"\").map((value) => {\r\n          return getDigit(value);\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nclass Weather extends React.Component {\r\n  state = {\r\n    lat: undefined,\r\n    lon: undefined,\r\n    errorMessage: undefined,\r\n    temperatureC: undefined,\r\n    temperatureF: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    icon: undefined,\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    moonImage: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      this.getPosition()\r\n        .then((position) => {\r\n          this.getWeather(position.coords.latitude, position.coords.longitude);\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ errorMessage: err.message });\r\n        });\r\n    } else {\r\n      alert(\"Geolocation not available\");\r\n    }\r\n\r\n    this.timerID = setInterval(\r\n      () => this.getWeather(this.state.lat, this.state.lon),\r\n      600000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  getPosition = (options) => {\r\n    return new Promise(function (resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n    });\r\n  };\r\n\r\n  getWeather = async (lat, lon) => {\r\n    const api_call = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\r\n    );\r\n\r\n    const data = await api_call.json();\r\n    this.setState({\r\n      lat: lat,\r\n      lon: lon,\r\n      city: data.name,\r\n      temperatureC: Math.round(data.main.temp),\r\n      temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n      humidity: data.main.humidity,\r\n      description: data.weather[0].description,\r\n      icon: data.weather[0].icon,\r\n      sunrise: moment.unix(data.sys.sunrise).format(\"hh:mm a\"),\r\n      sunset: moment.unix(data.sys.sunset).format(\"hh:mm a\"),\r\n      country: data.sys.country,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.city) {\r\n      return (\r\n        <div className=\"row\" id=\"weather\">\r\n          <div className=\"d-flex justify-content-center weather-text\">\r\n            <h1>\r\n              [{this.state.city}, {this.state.country}]{\" \"}\r\n              {this.state.temperatureF} {\"\\u00B0F\"} / {this.state.temperatureC}\r\n              {\"\\u00B0C\"}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport Display from \"./Display\";\r\nimport Weather from \"./Weather\";\r\nexport default function Clock() {\r\n  //States and Functions\r\n  const [is24, set24] = useState(false);\r\n  const getTime = (is24) => {\r\n    let date = new Date();\r\n    let normal = `${\r\n      date.getHours() <= 12 ? date.getHours() : date.getHours() - 12\r\n    }:${date.getMinutes()}:${date.getSeconds()} ${\r\n      date.getHours() < 12 ? \"AM\" : \"PM\"\r\n    }`;\r\n    let military = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    if (normal[0] === \"0\") {\r\n      normal = \"12\" + normal.substring(1, normal.length);\r\n    }\r\n    while (normal.length < 11) {\r\n      normal = normal + \" \";\r\n    }\r\n    return `${is24 ? military : normal}`;\r\n  };\r\n  const getSec = () => {\r\n    let date = new Date();\r\n    return date.getSeconds();\r\n  };\r\n  const getDateString = () => {\r\n    let date = new Date();\r\n    return date.toDateString();\r\n  };\r\n  const [time, setTime] = useState(getTime(is24));\r\n  //Side Effects\r\n  useEffect(() => {\r\n    set24(is24);\r\n    const interval = setInterval(() => {\r\n      setTime(getTime(is24));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [is24]);\r\n  //Render JSX\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"form-check form-switch d-flex justify-content-center\">\r\n          <input\r\n            className=\"form-check-input switch\"\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            onClick={() => {\r\n              set24(!is24);\r\n            }}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n            <h5>{is24 ? \"Military\" : \"Standard\"}</h5>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ fontFamily: \"sans-serif\" }}>\r\n        <form\r\n          className=\"d-flex justify-content-center\"\r\n          method=\"get\"\r\n          ngnoform=\"\"\r\n          action=\"https://www.google.com/search\"\r\n          autoComplete=\"off\"\r\n        >\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"search-box\"\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Google\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"search\"\r\n            className=\"btn material-icons\"\r\n            id=\"searchButton\"\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <Display time={time} sec={getSec()} />\r\n      <div className=\"row\">\r\n        <div className=\"d-flex justify-content-center text-info bg-dark date-text\">\r\n          <h1>{getDateString()}</h1>\r\n        </div>\r\n      </div>\r\n      <Weather />\r\n      <div className=\"row\">\r\n        <a\r\n          className=\"text-white\"\r\n          style={{ textDecoration: \"none\" }}\r\n          href=\"https://github.com/akamran2001/Clock\"\r\n        >\r\n          <h6 style={{ fontFamily: \"monospace\" }}>Created by Ahmed Kamran</h6>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Clock from \"./app/Clock\";\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(https://source.unsplash.com/${window.innerWidth}x${window.innerHeight}/daily?scenic)`,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <Clock />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}