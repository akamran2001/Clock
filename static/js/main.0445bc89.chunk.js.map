{"version":3,"sources":["app/Display.js","app/Weather.js","app/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","id","time","split","map","value","index","digit","style","sec","color","getDigit","Weather","useState","lat","undefined","lon","errorMessage","temperatureC","temperatureF","city","country","humidity","description","icon","sunrise","sunset","moonImage","weather","setWeather","getWeather","a","fetch","api_call","json","data","name","Math","round","main","temp","moment","unix","sys","format","e","console","log","useEffect","options","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","then","position","coords","latitude","longitude","catch","err","message","alert","interval","setInterval","clearInterval","Clock","is24","set24","getTime","date","Date","normal","getHours","getMinutes","getSeconds","military","substring","length","setTime","type","onClick","htmlFor","fontFamily","method","ngnoform","action","autoComplete","placeholder","toDateString","textDecoration","href","App","backgroundImage","window","innerWidth","innerHeight","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0445bc89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nfunction Display(props) {\r\n  const getDigit = (digit, index) => {\r\n    //Display Clock digit or letter\r\n    if (digit === \":\") {\r\n      return (\r\n        <h1\r\n          key={index}\r\n          id=\"digits\"\r\n          style={props.sec % 2 === 0 ? { color: \"white\" } : { color: \"red\" }}\r\n        >\r\n          {digit}\r\n        </h1>\r\n      );\r\n    } else if (digit === \"A\") {\r\n      return (\r\n        <h1\r\n          key={index}\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          AM\r\n        </h1>\r\n      );\r\n    } else if (digit === \"P\") {\r\n      return (\r\n        <h1\r\n          key={index}\r\n          id=\"period\"\r\n          style={props.sec % 2 === 0 ? { color: \"red\" } : { color: \"white\" }}\r\n        >\r\n          PM\r\n        </h1>\r\n      );\r\n    } else if (digit === \" \") {\r\n      return (\r\n        <h1 key={index} id=\"period\">\r\n          {\" \"}\r\n        </h1>\r\n      );\r\n    } else if (digit === \"M\") {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <h1 key={index} id=\"digits\">\r\n          {digit}\r\n        </h1>\r\n      );\r\n    }\r\n  };\r\n  //Render JSX\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"d-flex justify-content-center clock-text col\" id=\"time\">\r\n        {props.time.split(\"\").map((value, index) => {\r\n          return getDigit(value, index);\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction Weather(props) {\r\n  const [weather, setWeather] = useState({\r\n    lat: undefined,\r\n    lon: undefined,\r\n    errorMessage: undefined,\r\n    temperatureC: undefined,\r\n    temperatureF: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    icon: undefined,\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    moonImage: undefined,\r\n  });\r\n  const getPosition = (options) => {\r\n    return new Promise(function (resolve, reject) {\r\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n    });\r\n  };\r\n  const getWeather = async (lat, lon) => {\r\n    const api_call = await fetch(`https://ClockBackend.ahmedkamran.repl.co/${lat}/${lon}`);\r\n    const data = await api_call.json();\r\n    try {\r\n      setWeather({\r\n        lat: lat,\r\n        lon: lon,\r\n        city: data.name,\r\n        temperatureC: Math.round(data.main.temp),\r\n        temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n        humidity: data.main.humidity,\r\n        description: data.weather[0].description,\r\n        icon: data.weather[0].icon,\r\n        sunrise: moment.unix(data.sys.sunrise).format(\"hh:mm a\"),\r\n        sunset: moment.unix(data.sys.sunset).format(\"hh:mm a\"),\r\n        country: data.sys.country,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      getPosition()\r\n        .then((position) => {\r\n          getWeather(position.coords.latitude, position.coords.longitude);\r\n        })\r\n        .catch((err) => {\r\n          setWeather({ errorMessage: err.message });\r\n        });\r\n    } else {\r\n      alert(\"Geolocation not available\");\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      getWeather(weather.lat, weather.lon);\r\n    }, 600000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (weather.city) {\r\n    return (\r\n      <div className=\"row\" id=\"weather\">\r\n        <div className=\"d-flex justify-content-center weather-text\">\r\n          <h1>\r\n            [{weather.city}, {weather.country}] {weather.temperatureF}{\" \"}\r\n            {\"\\u00B0F\"} / {weather.temperatureC}\r\n            {\"\\u00B0C\"}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../index.css\";\r\nimport \"../App.css\";\r\nimport Display from \"./Display\";\r\nimport Weather from \"./Weather\";\r\nexport default function Clock() {\r\n  //States and Functions\r\n  const [is24, set24] = useState(false);\r\n  const getTime = (is24) => {\r\n    let date = new Date();\r\n    let normal = `${\r\n      date.getHours() <= 12 ? date.getHours() : date.getHours() - 12\r\n    }:${date.getMinutes()}:${date.getSeconds()} ${\r\n      date.getHours() < 12 ? \"AM\" : \"PM\"\r\n    }`;\r\n    let military = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    if (normal[0] === \"0\") {\r\n      normal = \"12\" + normal.substring(1, normal.length);\r\n    }\r\n    while (normal.length < 11) {\r\n      normal = normal + \" \";\r\n    }\r\n    return `${is24 ? military : normal}`;\r\n  };\r\n  const getSec = () => {\r\n    let date = new Date();\r\n    return date.getSeconds();\r\n  };\r\n  const getDateString = () => {\r\n    let date = new Date();\r\n    return date.toDateString();\r\n  };\r\n  const [time, setTime] = useState(getTime(is24));\r\n  //Side Effects\r\n  useEffect(() => {\r\n    set24(is24);\r\n    const interval = setInterval(() => {\r\n      setTime(getTime(is24));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [is24]);\r\n  //Render JSX\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"form-check form-switch d-flex justify-content-center\">\r\n          <input\r\n            className=\"form-check-input switch\"\r\n            type=\"checkbox\"\r\n            id=\"flexSwitchCheckDefault\"\r\n            onClick={() => {\r\n              set24(!is24);\r\n            }}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\r\n            <h5>{is24 ? \"Military\" : \"Standard\"}</h5>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" style={{ fontFamily: \"sans-serif\" }}>\r\n        <form\r\n          className=\"d-flex justify-content-center\"\r\n          method=\"get\"\r\n          ngnoform=\"\"\r\n          action=\"https://www.google.com/search\"\r\n          autoComplete=\"off\"\r\n        >\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"search-box\"\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Google\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"search\"\r\n            className=\"btn material-icons\"\r\n            id=\"searchButton\"\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <Display time={time} sec={getSec()} />\r\n      <div className=\"row\">\r\n        <div className=\"d-flex justify-content-center text-info bg-dark date-text\">\r\n          <h1>{getDateString()}</h1>\r\n        </div>\r\n      </div>\r\n      <Weather />\r\n      <div className=\"row\">\r\n        <h6 style={{ fontFamily: \"monospace\" }}>\r\n        Made with ❤️️ by{\" \"}\r\n          <a\r\n            className=\"text-white\"\r\n            style={{ textDecoration: \"none\" }}\r\n            href=\"https://github.com/akamran2001/Clock\"\r\n          >\r\n            Ahmed Kamran\r\n          </a>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Clock from \"./app/Clock\";\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(https://source.unsplash.com/${window.innerWidth}x${window.innerHeight}/daily?scenic)`,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <Clock />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}